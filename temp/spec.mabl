simulation 
import FixedStep;
import TypeConverter;
import Initializer;
import DebugLogging;
{
 	bool global_execution_continue = true;
	Math math = load("Math");
	Logger logger = load("Logger");
	DataWriter dataWriter = load("DataWriter");
	FMI2 sensorFMU = load("FMI2", "{5615bb5d-0674-4a3d-bd78-aec3f5321981}", "file:/C:/Users/aiden/OneDrive/Documents/University/CPS/Excercises/CSC3322Exercise4-3/CSC3322Exercise4/linefollower/FMUs/Sensor_Block.fmu");
	if( ((sensorFMU == null)) )
	{
		global_execution_continue = false;
	}
	FMI2 bodyFMU = load("FMI2", "{8182418a-ce57-4b50-beb5-3836815d261e}", "file:/C:/Users/aiden/OneDrive/Documents/University/CPS/Excercises/CSC3322Exercise4-3/CSC3322Exercise4/linefollower/FMUs/Body.fmu");
	if( ((bodyFMU == null)) )
	{
		global_execution_continue = false;
	}
	FMI2 controllerFMU = load("FMI2", "{5489e1ad-ba43-4b3e-b4f3-05ef2f5b3399}", "file:/C:/Users/aiden/OneDrive/Documents/University/CPS/Excercises/CSC3322Exercise4-3/CSC3322Exercise4/linefollower/FMUs/LFRControllerFMU/");
	if( ((controllerFMU == null)) )
	{
		global_execution_continue = false;
	}
	@map controller -> "controller";
	FMI2Component controller = null;
	if( ((global_execution_continue)) )
	{
			controller = controllerFMU.instantiate("controller", false, false);
			if( ((controller == null)) )
			{
				global_execution_continue = false;
			}
	}
	@map sensor2 -> "sensor2";
	FMI2Component sensor2 = null;
	if( ((global_execution_continue)) )
	{
			sensor2 = sensorFMU.instantiate("sensor2", false, false);
			if( ((sensor2 == null)) )
			{
				global_execution_continue = false;
			}
	}
	@map body -> "body";
	FMI2Component body = null;
	if( ((global_execution_continue)) )
	{
			body = bodyFMU.instantiate("body", false, false);
			if( ((body == null)) )
			{
				global_execution_continue = false;
			}
	}
	@map sensor1 -> "sensor1";
	FMI2Component sensor1 = null;
	if( ((global_execution_continue)) )
	{
			sensor1 = sensorFMU.instantiate("sensor1", false, false);
			if( ((sensor1 == null)) )
			{
				global_execution_continue = false;
			}
	}
	if( ((global_execution_continue)) )
	{
			FMI2Component[] components[4] = { controller , sensor2 , body , sensor1 };
			real START_TIME = 0.0;
			real STEP_SIZE = 0.5;
			real END_TIME = 60.0;
			while( (global_execution_continue) )
			{
				int status = 0;
				status = controller.setupExperiment(false, 0.0, START_TIME, true, END_TIME);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "Setup Experiment Failed:  %d", status);
						global_execution_continue = false;
						break;
				}
				status = sensor2.setupExperiment(false, 0.0, START_TIME, true, END_TIME);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "Setup Experiment Failed:  %d", status);
						global_execution_continue = false;
						break;
				}
				status = body.setupExperiment(false, 0.0, START_TIME, true, END_TIME);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "Setup Experiment Failed:  %d", status);
						global_execution_continue = false;
						break;
				}
				status = sensor1.setupExperiment(false, 0.0, START_TIME, true, END_TIME);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "Setup Experiment Failed:  %d", status);
						global_execution_continue = false;
						break;
				}
				real[] realValueSize2[2] = { 0.0 , 0.0 };
				uInt[] valRefsSize2[2] = { 4 , 5 };
				status = controller.setReal(valRefsSize2, 2, realValueSize2);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				int[] intValueSize4[4] = { 0 , 1 , 0 , 3 };
				uInt[] valRefsSize4[4] = { 7 , 8 , 21 , 23 };
				status = sensor2.setInteger(valRefsSize4, 4, intValueSize4);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				real[] realValueSize18[18] = { 0.2857735547859872 , 0.065 , 0.0 , 0.0 , 8.0 , 0.0 , 255.0 , 5.0 , 0.5 , 4.5 , 255.0 , -1.6777216E7 , -1.0 , 0.1 , 0.9 , 223.0 , 0.001 , 0.0 };
				uInt[] valRefsSize18[18] = { 3 , 4 , 5 , 6 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 24 , 25 };
				status = sensor2.setReal(valRefsSize18, 18, realValueSize18);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				real[] realValueSize55[55] = { 2500.0 , 0.5 , 7.0 , 1.0 , 0.0 , 0.0185 , 0.4714082212173507 , 6.6E-4 , 0.415 , 0.12 , 0.03 , 0.05 , 0.414 , 0.148 , -0.08 , 0.0 , 1332.0 , 0.08 , 44.0 , 1.0 , 1.0 , 2.0 , 0.03325 , 0.0126 , 0.0071 , 1.0 , 0.01 , 0.796 , 5.18 , 8.2 , 20.0 , -20.0 , 0.0126 , 0.0071 , 1.0 , 0.01 , 0.796 , 5.18 , 8.2 , 20.0 , -20.0 , 500.0 , 500.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 };
				uInt[] valRefsSize55[55] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 46 , 47 , 48 , 49 , 50 , 51 , 54 , 55 , 56 , 57 , 58 , 59 };
				status = body.setReal(valRefsSize55, 55, realValueSize55);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				intValueSize4[0] = 0;
				intValueSize4[1] = 1;
				intValueSize4[2] = 0;
				intValueSize4[3] = 3;
				valRefsSize4[0] = 7;
				valRefsSize4[1] = 8;
				valRefsSize4[2] = 21;
				valRefsSize4[3] = 23;
				status = sensor1.setInteger(valRefsSize4, 4, intValueSize4);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				realValueSize18[0] = 0.19458924538426403;
				realValueSize18[1] = 0.065;
				realValueSize18[2] = 0.0;
				realValueSize18[3] = 0.0;
				realValueSize18[4] = 8.0;
				realValueSize18[5] = 0.0;
				realValueSize18[6] = 255.0;
				realValueSize18[7] = 5.0;
				realValueSize18[8] = 0.5;
				realValueSize18[9] = 4.5;
				realValueSize18[10] = 255.0;
				realValueSize18[11] = -1.6777216E7;
				realValueSize18[12] = -1.0;
				realValueSize18[13] = 0.1;
				realValueSize18[14] = 0.9;
				realValueSize18[15] = 223.0;
				realValueSize18[16] = 0.001;
				realValueSize18[17] = 0.0;
				valRefsSize18[0] = 3;
				valRefsSize18[1] = 4;
				valRefsSize18[2] = 5;
				valRefsSize18[3] = 6;
				valRefsSize18[4] = 9;
				valRefsSize18[5] = 10;
				valRefsSize18[6] = 11;
				valRefsSize18[7] = 12;
				valRefsSize18[8] = 13;
				valRefsSize18[9] = 14;
				valRefsSize18[10] = 15;
				valRefsSize18[11] = 16;
				valRefsSize18[12] = 17;
				valRefsSize18[13] = 18;
				valRefsSize18[14] = 19;
				valRefsSize18[15] = 20;
				valRefsSize18[16] = 24;
				valRefsSize18[17] = 25;
				status = sensor1.setReal(valRefsSize18, 18, realValueSize18);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				status = controller.enterInitializationMode();
				status = sensor2.enterInitializationMode();
				status = body.enterInitializationMode();
				status = sensor1.enterInitializationMode();
				real[] RealValueSize1[1];
				uInt[] valRefsSize1[1] = { 5 };
				status = controller.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real controllerSvValRef5 = RealValueSize1[0];
				RealValueSize1[0] = controllerSvValRef5;
				valRefsSize1[0] = 192;
				status = body.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 187;
				status = body.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real bodySvValRef187 = RealValueSize1[0];
				RealValueSize1[0] = bodySvValRef187;
				valRefsSize1[0] = 86;
				status = sensor2.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				RealValueSize1[0] = bodySvValRef187;
				valRefsSize1[0] = 86;
				status = sensor1.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 184;
				status = body.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real bodySvValRef184 = RealValueSize1[0];
				RealValueSize1[0] = bodySvValRef184;
				valRefsSize1[0] = 83;
				status = sensor2.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 82;
				status = sensor2.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real sensor2SvValRef82 = RealValueSize1[0];
				RealValueSize1[0] = sensor2SvValRef82;
				valRefsSize1[0] = 3;
				status = controller.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				bool[] BooleanValueSize1[1];
				valRefsSize1[0] = 81;
				status = sensor2.getBoolean(valRefsSize1, 1, BooleanValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				bool sensor2SvValRef81 = BooleanValueSize1[0];
				BooleanValueSize1[0] = sensor2SvValRef81;
				valRefsSize1[0] = 2;
				status = controller.setBoolean(valRefsSize1, 1, BooleanValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				RealValueSize1[0] = bodySvValRef184;
				valRefsSize1[0] = 83;
				status = sensor1.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 82;
				status = sensor1.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real sensor1SvValRef82 = RealValueSize1[0];
				RealValueSize1[0] = sensor1SvValRef82;
				valRefsSize1[0] = 1;
				status = controller.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 81;
				status = sensor1.getBoolean(valRefsSize1, 1, BooleanValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				bool sensor1SvValRef81 = BooleanValueSize1[0];
				BooleanValueSize1[0] = sensor1SvValRef81;
				valRefsSize1[0] = 0;
				status = controller.setBoolean(valRefsSize1, 1, BooleanValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 186;
				status = body.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real bodySvValRef186 = RealValueSize1[0];
				RealValueSize1[0] = bodySvValRef186;
				valRefsSize1[0] = 85;
				status = sensor2.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				RealValueSize1[0] = bodySvValRef186;
				valRefsSize1[0] = 85;
				status = sensor1.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 185;
				status = body.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real bodySvValRef185 = RealValueSize1[0];
				RealValueSize1[0] = bodySvValRef185;
				valRefsSize1[0] = 84;
				status = sensor2.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				RealValueSize1[0] = bodySvValRef185;
				valRefsSize1[0] = 84;
				status = sensor1.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				valRefsSize1[0] = 4;
				status = controller.getReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "get failed %d", status);
						global_execution_continue = false;
						break;
				}
				real controllerSvValRef4 = RealValueSize1[0];
				RealValueSize1[0] = controllerSvValRef4;
				valRefsSize1[0] = 191;
				status = body.setReal(valRefsSize1, 1, RealValueSize1);
				if( (status == 3 || status == 4) )
				{
						logger.log(4, "set failed %d", status);
						global_execution_continue = false;
						break;
				}
				status = controller.exitInitializationMode();
				status = sensor2.exitInitializationMode();
				status = body.exitInitializationMode();
				status = sensor1.exitInitializationMode();
				break;
			}
			if( (global_execution_continue) )
			{
					FMI2Component[] fix_components[4] = { controller , sensor2 , body , sensor1 };
					{
 						int end = END_TIME - STEP_SIZE;
						real time = START_TIME;
						real fix_stepSize = 0.0;
						real fix_recoveryStepSize = 0.0;
						bool fix_recovering = false;
						bool fix_global_status = false;
						int fix_comp_index = 0;
						real[] controllerROut[2];
						real[] sensor1ROut[3];
						bool[] sensor1BOut[1];
						real[] sensor2ROut[3];
						bool[] sensor2BOut[1];
						real[] bodyROut[9];
						uInt[] controllerVrefROut[2] = { 4 , 5 };
						uInt[] sensor1VrefROut[3] = { 79 , 80 , 82 };
						uInt[] sensor1VrefBOut[1] = { 81 };
						uInt[] sensor2VrefROut[3] = { 79 , 80 , 82 };
						uInt[] sensor2VrefBOut[1] = { 81 };
						uInt[] bodyVrefROut[9] = { 183 , 184 , 185 , 186 , 187 , 188 , 189 , 190 , 193 };
						real[] controllerRIn[2];
						bool[] controllerBIn[2];
						real[] sensor1RIn[4];
						real[] sensor2RIn[4];
						real[] bodyRIn[2];
						uInt[] controllerVrefRIn[2] = { 3 , 1 };
						uInt[] controllerVrefBIn[2] = { 2 , 0 };
						uInt[] sensor1VrefRIn[4] = { 86 , 84 , 85 , 83 };
						uInt[] sensor2VrefRIn[4] = { 83 , 84 , 86 , 85 };
						uInt[] bodyVrefRIn[2] = { 191 , 192 };
						int[] fix_status[4] = { 0 , 0 , 0 , 0 };
						fix_status[0] = controller.getReal(controllerVrefROut, 2, controllerROut);
						if( (fix_status[0] == 3 || fix_status[0] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						fix_status[3] = sensor1.getReal(sensor1VrefROut, 3, sensor1ROut);
						if( (fix_status[3] == 3 || fix_status[3] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						fix_status[3] = sensor1.getBoolean(sensor1VrefBOut, 1, sensor1BOut);
						if( (fix_status[3] == 3 || fix_status[3] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						fix_status[1] = sensor2.getReal(sensor2VrefROut, 3, sensor2ROut);
						if( (fix_status[1] == 3 || fix_status[1] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						fix_status[1] = sensor2.getBoolean(sensor2VrefBOut, 1, sensor2BOut);
						if( (fix_status[1] == 3 || fix_status[1] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						fix_status[2] = body.getReal(bodyVrefROut, 9, bodyROut);
						if( (fix_status[2] == 3 || fix_status[2] == 4) )
						{
								logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
								global_execution_continue = false;
						}
						string[] data_headers[19] = { "{bodyFMU}.body.encoder_left_output" , "{bodyFMU}.body.encoder_right_output" , "{bodyFMU}.body.robot_theta" , "{bodyFMU}.body.robot_x" , "{bodyFMU}.body.robot_y" , "{bodyFMU}.body.robot_z" , "{bodyFMU}.body.total_energy_used" , "{bodyFMU}.body.wheel_left_rotation" , "{bodyFMU}.body.wheel_right_rotation" , "{controllerFMU}.controller.servoLeftVal" , "{controllerFMU}.controller.servoRightVal" , "{sensorFMU}.sensor1.lf_1_sensor_fail_flag" , "{sensorFMU}.sensor1.lf_1_sensor_position_x" , "{sensorFMU}.sensor1.lf_1_sensor_position_y" , "{sensorFMU}.sensor1.lf_1_sensor_reading" , "{sensorFMU}.sensor2.lf_1_sensor_fail_flag" , "{sensorFMU}.sensor2.lf_1_sensor_position_x" , "{sensorFMU}.sensor2.lf_1_sensor_position_y" , "{sensorFMU}.sensor2.lf_1_sensor_reading" };
						DataWriterConfig dataWriter_configuration = dataWriter.writeHeader(data_headers);
						string[] data_values[19] = { bodyROut[5] , bodyROut[6] , bodyROut[1] , bodyROut[2] , bodyROut[3] , bodyROut[4] , bodyROut[0] , bodyROut[8] , bodyROut[7] , controllerROut[0] , controllerROut[1] , sensor1BOut[0] , sensor1ROut[0] , sensor1ROut[1] , sensor1ROut[2] , sensor2BOut[0] , sensor2ROut[0] , sensor2ROut[1] , sensor2ROut[2] };
						data_values[0] = bodyROut[5];
						data_values[1] = bodyROut[6];
						data_values[2] = bodyROut[1];
						data_values[3] = bodyROut[2];
						data_values[4] = bodyROut[3];
						data_values[5] = bodyROut[4];
						data_values[6] = bodyROut[0];
						data_values[7] = bodyROut[8];
						data_values[8] = bodyROut[7];
						data_values[9] = controllerROut[0];
						data_values[10] = controllerROut[1];
						data_values[11] = sensor1BOut[0];
						data_values[12] = sensor1ROut[0];
						data_values[13] = sensor1ROut[1];
						data_values[14] = sensor1ROut[2];
						data_values[15] = sensor2BOut[0];
						data_values[16] = sensor2ROut[0];
						data_values[17] = sensor2ROut[1];
						data_values[18] = sensor2ROut[2];
						dataWriter.writeDataPoint(dataWriter_configuration, time, data_values);
						while( (global_execution_continue && time <= end) )
						{
							if( (fix_recovering) )
							{
									fix_stepSize = fix_recoveryStepSize;
									fix_recovering = false;
							}
							else
							{
								fix_stepSize = STEP_SIZE;
							}
							bodyRIn[0] = controllerROut[0];
							sensor1RIn[0] = bodyROut[4];
							sensor2RIn[0] = bodyROut[1];
							sensor2RIn[1] = bodyROut[2];
							sensor2RIn[2] = bodyROut[4];
							controllerRIn[0] = sensor2ROut[2];
							sensor1RIn[1] = bodyROut[2];
							sensor2RIn[3] = bodyROut[3];
							sensor1RIn[2] = bodyROut[3];
							bodyRIn[1] = controllerROut[1];
							controllerBIn[0] = sensor2BOut[0];
							controllerRIn[1] = sensor1ROut[2];
							sensor1RIn[3] = bodyROut[1];
							controllerBIn[1] = sensor1BOut[0];
							fix_status[0] = controller.setReal(controllerVrefRIn, 2, controllerRIn);
							if( (fix_status[0] == 3 || fix_status[0] == 4) )
							{
									logger.log(4, "set failed %d ", fix_status[fix_comp_index]);
									global_execution_continue = false;
									break;
							}
							fix_status[0] = controller.setBoolean(controllerVrefBIn, 2, controllerBIn);
							if( (fix_status[0] == 3 || fix_status[0] == 4) )
							{
									logger.log(4, "set failed %d ", fix_status[fix_comp_index]);
									global_execution_continue = false;
									break;
							}
							fix_status[3] = sensor1.setReal(sensor1VrefRIn, 4, sensor1RIn);
							if( (fix_status[3] == 3 || fix_status[3] == 4) )
							{
									logger.log(4, "set failed %d ", fix_status[fix_comp_index]);
									global_execution_continue = false;
									break;
							}
							fix_status[1] = sensor2.setReal(sensor2VrefRIn, 4, sensor2RIn);
							if( (fix_status[1] == 3 || fix_status[1] == 4) )
							{
									logger.log(4, "set failed %d ", fix_status[fix_comp_index]);
									global_execution_continue = false;
									break;
							}
							fix_status[2] = body.setReal(bodyVrefRIn, 2, bodyRIn);
							if( (fix_status[2] == 3 || fix_status[2] == 4) )
							{
									logger.log(4, "set failed %d ", fix_status[fix_comp_index]);
									global_execution_continue = false;
									break;
							}
							fix_status[0] = controller.doStep(time, fix_stepSize, true);
							fix_status[1] = sensor2.doStep(time, fix_stepSize, true);
							fix_status[2] = body.doStep(time, fix_stepSize, true);
							fix_status[3] = sensor1.doStep(time, fix_stepSize, true);
							fix_global_status = true;
							fix_comp_index = 0;
							while( (fix_comp_index < 4) )
							{
								if( (fix_status[fix_comp_index] != 0) )
								{
										fix_global_status = false;
										logger.log(4, "doStep failed for %d - status code ", fix_status[fix_comp_index]);
										break;
								}
								fix_comp_index = fix_comp_index + 1;
							}
							if( (!fix_global_status) )
							{
									logger.log(4, "Deviating from normal execution. Handling exceptions %d", 0);
									fix_global_status = true;
									fix_comp_index = 0;
									bool discardObserved = false;
									while( (fix_comp_index < 4) )
									{
										logger.log(4, "Fmu index %d, status code %d", fix_comp_index, fix_status[fix_comp_index]);
										if( (fix_status[fix_comp_index] != 0) )
										{
												fix_global_status = false;
												if( (fix_status[fix_comp_index] == 5) )
												{
													logger.log(4, "doStep failed for %d PENDING not supported- status code ", fix_status[fix_comp_index]);
												}
												else
												{
													if( (fix_status[fix_comp_index] == 3 || fix_status[fix_comp_index] == 4) )
													{
														logger.log(4, "doStep failed for %d - status code ", fix_status[fix_comp_index]);
													}
												}
												if( (fix_status[fix_comp_index] == 2) )
												{
														logger.log(2, "Instance discarding %d", fix_comp_index);
														discardObserved = true;
												}
												global_execution_continue = false;
												break;
										}
										fix_comp_index = fix_comp_index + 1;
									}
									if( (!global_execution_continue) )
									{
										break;
									}
							}
							if( (global_execution_continue && !fix_recovering) )
							{
									fix_status[0] = controller.getReal(controllerVrefROut, 2, controllerROut);
									if( (fix_status[0] == 3 || fix_status[0] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									fix_status[3] = sensor1.getReal(sensor1VrefROut, 3, sensor1ROut);
									if( (fix_status[3] == 3 || fix_status[3] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									fix_status[3] = sensor1.getBoolean(sensor1VrefBOut, 1, sensor1BOut);
									if( (fix_status[3] == 3 || fix_status[3] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									fix_status[1] = sensor2.getReal(sensor2VrefROut, 3, sensor2ROut);
									if( (fix_status[1] == 3 || fix_status[1] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									fix_status[1] = sensor2.getBoolean(sensor2VrefBOut, 1, sensor2BOut);
									if( (fix_status[1] == 3 || fix_status[1] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									fix_status[2] = body.getReal(bodyVrefROut, 9, bodyROut);
									if( (fix_status[2] == 3 || fix_status[2] == 4) )
									{
											logger.log(4, "get failed %d ", fix_status[fix_comp_index]);
											global_execution_continue = false;
											break;
									}
									time = time + fix_stepSize;
									data_values[0] = bodyROut[5];
									data_values[1] = bodyROut[6];
									data_values[2] = bodyROut[1];
									data_values[3] = bodyROut[2];
									data_values[4] = bodyROut[3];
									data_values[5] = bodyROut[4];
									data_values[6] = bodyROut[0];
									data_values[7] = bodyROut[8];
									data_values[8] = bodyROut[7];
									data_values[9] = controllerROut[0];
									data_values[10] = controllerROut[1];
									data_values[11] = sensor1BOut[0];
									data_values[12] = sensor1ROut[0];
									data_values[13] = sensor1ROut[1];
									data_values[14] = sensor1ROut[2];
									data_values[15] = sensor2BOut[0];
									data_values[16] = sensor2ROut[0];
									data_values[17] = sensor2ROut[1];
									data_values[18] = sensor2ROut[2];
									dataWriter.writeDataPoint(dataWriter_configuration, time, data_values);
							}
						}
						controller.terminate();
						sensor2.terminate();
						body.terminate();
						sensor1.terminate();
						dataWriter.close();
					}
			}
	}
	controllerFMU.freeInstance(controller);
	sensorFMU.freeInstance(sensor2);
	bodyFMU.freeInstance(body);
	sensorFMU.freeInstance(sensor1);
	unload(sensorFMU);
	unload(bodyFMU);
	unload(controllerFMU);
	unload(math);
	unload(logger);
	unload(dataWriter);
}